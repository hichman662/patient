{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts","./src/app/models/userData.model.ts","./src/app/services/user.service.ts","./src/app/login/login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  },\r\n  {\r\n    path: 'tabs/tab0',\r\n    loadChildren: () => import('../tab0/tab0.module').then(m => m.Tab0PageModule)\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { UserService } from './../services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport Swal from 'sweetalert2';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  public formSubmit = false;\r\n  public waiting = false;\r\n\r\n  public loginForm = this.fb.group({\r\n    Email: ['', [Validators.required, Validators.email]],\r\n    Pass: ['', Validators.required ]\r\n  });\r\n  constructor(private router: Router,\r\n    private storage: Storage,\r\n    private fb: FormBuilder,\r\n    private userService: UserService) { }\r\n\r\nasync  ngOnInit() {\r\n   await this.storage.clear();\r\n  }\r\n\r\n  async start() {\r\n    this.router.navigateByUrl('/tabs', { replaceUrl:true });\r\n  }\r\n\r\n/*   login(): any {\r\n    this.formSubmit = true;\r\n    if (!this.loginForm.valid) {\r\n      console.warn('error in the form');\r\n      return;\r\n    }\r\n    this.waiting = true;\r\n    this.userService.login( this.loginForm.value)\r\n      .subscribe( (res: any) => {\r\n        this.waiting = false;\r\n        this.router.navigateByUrl('/scenarios', { replaceUrl:true });\r\n      }, (err: any) => {\r\n        console.warn('Error respuesta api', err);\r\n        if(err.status === 401) {\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: err.statusText || 'The action could not be completed, please try again later',\r\n            icon: 'error',\r\n            confirmButtonText: 'Ok',\r\n            toast: true\r\n          });\r\n        } else {\r\n          Swal.fire({\r\n            title: 'Error!',\r\n            text: err.statusText || 'The action could not be completed, please try again later',\r\n            icon: 'error',\r\n            confirmButtonText: 'Ok',\r\n            toast: true\r\n          });\r\n        }\r\n        this.waiting = false;\r\n      });\r\n\r\n    } */\r\n\r\n  campoValido(campo: string ){\r\n    return this.loginForm.get(campo)?.valid || !this.formSubmit;\r\n  }\r\n\r\n}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nexport class UserData {\r\n  constructor(\r\n   public Id: number,\r\n   public BirthDate?: Date,\r\n   public Surnames?: string,\r\n   public Address?: string,\r\n   public Phone?: string,\r\n   public Photo?: string,\r\n   public IsActive?: boolean,\r\n   public Type?: number,\r\n   public IsDiseased?: boolean,\r\n   public Email?: string,\r\n  )\r\n{}\r\n}\r\n","/* eslint-disable @typescript-eslint/member-ordering */\r\n/* eslint-disable quote-props */\r\n/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable @typescript-eslint/ban-types */\r\nimport { environment } from './../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {of, Observable} from 'rxjs';\r\nimport { loginForm  } from '../interfaces/loginForm.interface';\r\nimport { Router } from '@angular/router';\r\nimport { tap, map, catchError } from 'rxjs/operators';\r\nimport { UserData } from '../models/userData.model';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  isLoggedIn = false;\r\n  token = '';\r\n\r\nprivate newUser: UserData = new UserData(0, new Date(), '','','', '',false,1, false,'');\r\nconstructor(private http: HttpClient,\r\n               private router: Router,\r\n               private storage: Storage) {\r\n\r\n}\r\n\r\npublic getAllUsers(): Observable<object>{\r\n  return this.http.get(`${environment.base_url}/User/ReadAll`);\r\n}\r\n\r\npublic createUser( data: UserData ): Observable<object> {\r\n  return this.http.post(`${environment.base_url}/User/New_`, data)\r\n  .pipe(\r\n    tap((res: any)=>{\r\n      const {Id ,BirhDate, Surnames, Address, Phone, Photo,IsActive, Type, IsDiseased,Email } = res;\r\n      this.newUser = new UserData(Id ,BirhDate, Surnames, Address, Phone, Photo,IsActive, Type, IsDiseased,Email);\r\n    })\r\n  );\r\n}\r\n\r\n/* login( formData: loginForm) {\r\n  return this.http.post(`${environment.base_url}/UserAnonimous/Login`, formData)\r\n          .pipe(\r\n            tap( (res: any) => {\r\n              this.isLoggedIn = true;\r\n              this.storage.set('token', res);\r\n              })\r\n          );\r\n} */\r\n\r\n/* get headers() {\r\n  return {\r\n    headers: {\r\n      'token': this.getToken\r\n    }};\r\n}\r\nget getToken(): string {\r\n  this.storage.get('token').then((val) => {\r\n    this.token = val;\r\n  });\r\n  return this.token || '';\r\n} */\r\n\r\nget idNewUser(): number {\r\n  return this.newUser.Id;\r\n}\r\n\r\nget nameNewUser(): string | undefined {\r\n  return this.newUser.Surnames;\r\n}\r\n\r\nremoveUserId(){\r\n  this.newUser.Id = null;\r\n}\r\nremoveUserName(){\r\n  this.newUser.Surnames = null;\r\n}\r\n\r\n}\r\n","export default \"<ion-content>\\r\\n\\r\\n    <!-- <ion-title class=\\\"mb-4\\\">Twins4Disabilities</ion-title>\\r\\n    <form id=\\\"loginform\\\" [formGroup]=\\\"loginForm\\\">\\r\\n        <div class=\\\"input-group\\\">\\r\\n            <ion-input type=\\\"email\\\" formControlName=\\\"Email\\\" placeholder=\\\"Email\\\" required></ion-input>\\r\\n            <br />\\r\\n            <ion-input type=\\\"password\\\" formControlName=\\\"Pass\\\" placeholder=\\\"Password\\\" required></ion-input>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <p class=\\\"text-danger\\\" *ngIf=\\\"!campoValido('Email')\\\">The user field is required</p>\\r\\n                <p class=\\\"text-danger\\\" *ngIf=\\\"!campoValido('Pass')\\\">The password field is required</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <ion-button class=\\\"btn btn-success\\\" (click)=\\\"start();\\\" type=\\\"submit\\\" [disabled]=\\\"waiting\\\">\\r\\n            <ion-spinner name=\\\"\\\" color=\\\"danger\\\" *ngIf=\\\"waiting\\\"></ion-spinner>Login</ion-button>\\r\\n    </form> -->\\r\\n\\r\\n\\r\\n    <ion-slide>\\r\\n        <form id=\\\"loginform\\\" [formGroup]=\\\"loginForm\\\">\\r\\n            <div class=\\\"contaier-login\\\">\\r\\n                <ion-grid>\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <h3>Twins4Disabilities</h3>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-list>\\r\\n\\r\\n                                <ion-item>\\r\\n                                    <ion-icon name=\\\"person\\\" class=\\\"icon-login\\\"></ion-icon>\\r\\n                                    <ion-input formControlName=\\\"Email\\\" name=\\\"user\\\" type=\\\"email\\\" required placeholder=\\\"Email\\\"></ion-input>\\r\\n                                </ion-item>\\r\\n                                <br />\\r\\n                                <ion-item>\\r\\n                                    <ion-icon name=\\\"lock-closed\\\" class=\\\"icon-login\\\"></ion-icon>\\r\\n                                    <ion-input formControlName=\\\"Pass\\\" name=\\\"password\\\" type=\\\"password\\\" required placeholder=\\\"Password\\\"></ion-input>\\r\\n                                </ion-item>\\r\\n\\r\\n                            </ion-list>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row>\\r\\n                        <ion-col>\\r\\n                            <ion-button class=\\\"btn btn-success\\\" (click)=\\\"start();\\\" type=\\\"submit\\\" [disabled]=\\\"waiting\\\" fill=\\\"solid\\\" expand=\\\"full\\\">\\r\\n                                <ion-spinner name=\\\"\\\" color=\\\"danger\\\" *ngIf=\\\"waiting\\\"></ion-spinner>Login\\r\\n                            </ion-button>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                    <ion-row class=\\\"text-justify\\\">\\r\\n                        <ion-col>\\r\\n                            <ion-label>\\r\\n                                <h3>Forgot password</h3>\\r\\n                            </ion-label>\\r\\n                        </ion-col>\\r\\n                        <ion-col>\\r\\n                            <p class=\\\"text-danger\\\" *ngIf=\\\"!campoValido('Email')\\\">The user field is required</p>\\r\\n                            <p class=\\\"text-danger\\\" *ngIf=\\\"!campoValido('Pass')\\\">The password field is required</p>\\r\\n                        </ion-col>\\r\\n                    </ion-row>\\r\\n                </ion-grid>\\r\\n            </div>\\r\\n        </form>\\r\\n    </ion-slide>\\r\\n\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}