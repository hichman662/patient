{"version":3,"file":"src_app_patient-access_detail-patient-access_detail-patient-access_module_ts.js","mappings":"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","sources":["./src/app/patient-access/detail-access-mode/detail-access-mode.component.ts","./src/app/patient-access/detail-patient-access/detail-patient-access-routing.module.ts","./src/app/patient-access/detail-patient-access/detail-patient-access.module.ts","./src/app/patient-access/detail-patient-access/detail-patient-access.page.ts","./src/app/patient-access/detail-access-mode/detail-access-mode.component.html","./src/app/patient-access/detail-patient-access/detail-patient-access.page.html"],"sourcesContent":["/* eslint-disable @typescript-eslint/naming-convention */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AdaptationTypeRequired } from './../../models/adaptationTypeRequired.model';\r\nimport { AdaptationRequest } from './../../models/adaptationRequest.model';\r\nimport { PatientService } from './../../services/patient.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AdaptationDetailRequired } from 'src/app/models/adaptationDetailRequired.model';\r\n\r\n@Component({\r\n  selector: 'app-detail-access-mode',\r\n  templateUrl: './detail-access-mode.component.html',\r\n  styleUrls: ['./detail-access-mode.component.scss'],\r\n})\r\nexport class DetailAccessModeComponent implements OnInit {\r\n\r\n  public AdaptationRequests: AdaptationRequest [] = [];\r\n  public AdaptationTypes: AdaptationTypeRequired [] = [];\r\n  public AdaptationDetails: AdaptationDetailRequired [] = [];\r\n    segmentModel = 'AdaptationRequest';\r\n  private idPassedByURL: number = null;\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DetailPatientAccessPage } from './detail-patient-access.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DetailPatientAccessPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DetailPatientAccessPageRoutingModule {}\r\n","import { DetailAccessModeComponent } from './../detail-access-mode/detail-access-mode.component';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DetailPatientAccessPageRoutingModule } from './detail-patient-access-routing.module';\r\n\r\nimport { DetailPatientAccessPage } from './detail-patient-access.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    DetailPatientAccessPageRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatExpansionModule\r\n  ],\r\n  declarations: [DetailPatientAccessPage, DetailAccessModeComponent]\r\n})\r\nexport class DetailPatientAccessPageModule {}\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\n/* eslint-disable @typescript-eslint/member-ordering */\r\nimport { AccessMode } from './../../models/accessMode.model';\r\nimport { PatientService } from './../../services/patient.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Storage } from '@ionic/storage';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\n@Component({\r\n  selector: 'app-detail-patient-access',\r\n  templateUrl: './detail-patient-access.page.html',\r\n  styleUrls: ['./detail-patient-access.page.scss'],\r\n})\r\nexport class DetailPatientAccessPage implements OnInit {\r\n\r\n\r\n  public patientAccessName: '';\r\n  public patientAccessDescrip: '';\r\n  public accessMode: AccessMode;\r\n  patientProfileId: number;\r\n  segmentModel = 'details';\r\n  public allAccessMode: AccessMode []= [];\r\n  patientAccessDetailNull = false;\r\n  private idPassedByURL: number = null;\r\n  patientAccessForm: FormGroup;\r\n  idAccessMode: number;\r\n  name = '';\r\n  constructor(\r\n    private patientService: PatientService,\r\n    private route: ActivatedRoute,\r\n    private storage: Storage,\r\n    public alertController: AlertController\r\n\r\n  ) {\r\n    this.patientAccessForm = new FormGroup({\r\n      idPatientProfile: new FormControl(Number, [\r\n        Validators.required\r\n      ])\r\n    });\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.idPassedByURL = this.route.snapshot.params.Id;\r\n    this.callingAccessdatil();\r\n  }\r\n\r\n  callingAccessdatil(){\r\n    this.patientService.getPatientAccessById(this.idPassedByURL)\r\n    .subscribe((res: any ) => {\r\n      console.log(res);\r\n      this.patientAccessDetailNull = false;\r\n      this.patientAccessDescrip = res.Description;\r\n      this.patientAccessName = res.Name;\r\n       if(res.AccessMode != null){\r\n       this.accessMode = res.AccessMode;\r\n       this.patientAccessDetailNull = false;\r\n\r\n    }else{\r\n      this.patientAccessDetailNull = true;\r\n      this.accessMode= null;\r\n    }\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n\r\n    this.storage.get('idPatientProfile').then((val) => {\r\n      if(val != null){\r\n        this.patientProfileId= val;\r\n        this.accessModeId();\r\n      }\r\n    });\r\n\r\n  }\r\naccessModeId() {\r\n  this.patientService.getAccessModeByIdPatientprofile(this.patientProfileId)\r\n    .subscribe((res: any ) => {\r\n      this.allAccessMode = res;\r\n    }, (err) => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  onSubmit(){\r\n\r\n    this.idAccessMode = this.patientAccessForm.get('idPatientProfile').value;\r\n    this.patientService.assignAccessModeToPatientAccess(this.idPassedByURL, this.idAccessMode)\r\n    .subscribe( (res: any) => {\r\n      this.presentAlert();\r\n        }, ( err ) => {\r\n    });\r\n  }\r\n  async presentAlert() {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'SUCCESS!',\r\n      message: `The Access Profile has been assigned successfully`,\r\n      buttons: [  {\r\n        text: 'Ok',\r\n        handler: () => {\r\n          this.callingAccessdatil();\r\n        }\r\n      }\r\n      ]\r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n}\r\n\r\n","export default \"<ion-segment value=\\\"all\\\" color=\\\"tertiary\\\" class=\\\"animate__animated animate__slideInUp animate__fast\\\" scrollable=\\\"true\\\" mode=\\\"md\\\" [(ngModel)]=\\\"segmentModel\\\" lines=\\\"none\\\">\\r\\n    <ion-segment-button value=\\\"AdaptationRequest\\\">\\r\\n        <ion-icon name=\\\"chatbox-ellipses-outline\\\"></ion-icon>\\r\\n        <ion-label>Adaptation Request</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"AdaptationType\\\">\\r\\n        <ion-icon name=\\\"star-half-outline\\\"></ion-icon>\\r\\n        <ion-label>Adaptation Type</ion-label>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"AdaptationDetail\\\">\\r\\n        <ion-icon name=\\\"telescope-outline\\\"></ion-icon>\\r\\n        <ion-label>Adaptation Detail</ion-label>\\r\\n    </ion-segment-button>\\r\\n</ion-segment>\\r\\n<div *ngIf=\\\"segmentModel === 'AdaptationRequest'\\\">\\r\\n    <!--<div class=\\\"container\\\" *ngFor=\\\"let AdaptationRequest of AdaptationRequests|keyvalue\\\">-->\\r\\n    <div class=\\\"container\\\">\\r\\n        <mat-expansion-panel details>\\r\\n            <mat-expansion-panel-header slot=\\\"start\\\">\\r\\n                <mat-panel-title>\\r\\n                    <ion-item>\\r\\n                        <ion-icon class=\\\"segmentIcon\\\" name=\\\"list-circle-outline\\\"></ion-icon>\\r\\n                        <ion-label>VALUE</ion-label>\\r\\n                        <!-- <ion-label>{{AdaptationRequest.value['Description']}}</ion-label> -->\\r\\n                    </ion-item>\\r\\n                </mat-panel-title>\\r\\n\\r\\n            </mat-expansion-panel-header>\\r\\n\\r\\n            <ion-item-sliding>\\r\\n                <ion-item-options side=\\\"start\\\">\\r\\n                    <ion-item-option color=\\\"danger\\\" (click)=\\\"null\\\" expandable>\\r\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n                    </ion-item-option>\\r\\n                </ion-item-options>\\r\\n            </ion-item-sliding>\\r\\n\\r\\n            <ion-card>\\r\\n                <ion-item>\\r\\n\\r\\n                    <ion-label>Access Mode Target</ion-label>\\r\\n                    <ion-badge> Auditory</ion-badge>\\r\\n                    <!-- <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 1\\\"> Auditory</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 2\\\"> Colour</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 3\\\"> ItemSize</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 4\\\"> Olfactory</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 5\\\"> Orientation</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 6\\\"> Position</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 7\\\"> Tactile</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 8\\\"> Text on image</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 9\\\"> Textual</ion-badge>\\r\\n                    <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.AccessModeTarget === 10\\\"> Visual</ion-badge> -->\\r\\n\\r\\n                </ion-item>\\r\\n                <ion-item>\\r\\n\\r\\n                    <ion-label>Language Of Adaptation</ion-label>\\r\\n\\r\\n                    <ion-badge>ES</ion-badge>\\r\\n                    <!--  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 1\\\">ES</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 2\\\">EN</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 3\\\">FR</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 4\\\">IT</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 5\\\">PR</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 6\\\">DE</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 7\\\">JA</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 8\\\">KO</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationRequest).value.LanguageOfAdaptation === 9\\\">ZH</ion-badge> -->\\r\\n\\r\\n\\r\\n                </ion-item>\\r\\n\\r\\n            </ion-card>\\r\\n\\r\\n        </mat-expansion-panel>\\r\\n\\r\\n\\r\\n\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"segmentModel === 'AdaptationType'\\\">\\r\\n    <!-- <div class=\\\"container\\\" *ngFor=\\\"let AdaptationType of AdaptationTypes|keyvalue\\\"> -->\\r\\n    <div class=\\\"container\\\">\\r\\n        <mat-expansion-panel details>\\r\\n            <mat-expansion-panel-header slot=\\\"start\\\">\\r\\n                <mat-panel-title>\\r\\n                    <ion-item>\\r\\n                        <ion-icon class=\\\"segmentIcon\\\" name=\\\"list-circle-outline\\\"></ion-icon>\\r\\n                        <!-- <ion-label>{{AdaptationType.value['Description']}}</ion-label> -->\\r\\n                        <ion-label>VALUE</ion-label>\\r\\n                    </ion-item>\\r\\n                </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <ion-item-sliding>\\r\\n                <ion-item-options side=\\\"start\\\">\\r\\n                    <ion-item-option color=\\\"danger\\\" (click)=\\\"null\\\" expandable>\\r\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n                    </ion-item-option>\\r\\n                </ion-item-options>\\r\\n            </ion-item-sliding>\\r\\n            <ion-card>\\r\\n                <ion-item>\\r\\n                    <ion-label>Adaption Request</ion-label>\\r\\n                    <ion-badge>Alternative Text</ion-badge>\\r\\n                    <!--  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 1\\\"> Alternative Text</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 2\\\"> Audio description</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 3\\\"> Captions</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 4\\\"> E_book</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 5\\\"> Haptic</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 6\\\"> HighContrast</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 7\\\"> LongDescription</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 8\\\"> Sign Language</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationType).value.AdaptionRequest === 9\\\"> Transcript</ion-badge> -->\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n        </mat-expansion-panel>\\r\\n    </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"segmentModel === 'AdaptationDetail'\\\">\\r\\n    <!-- <div class=\\\"container\\\" *ngFor=\\\"let AdaptationDetail of AdaptationDetails|keyvalue\\\"> -->\\r\\n    <div class=\\\"container\\\">\\r\\n        <mat-expansion-panel details>\\r\\n            <mat-expansion-panel-header slot=\\\"start\\\">\\r\\n                <mat-panel-title>\\r\\n                    <ion-item>\\r\\n                        <ion-icon class=\\\"segmentIcon\\\" name=\\\"list-circle-outline\\\"></ion-icon>\\r\\n                        <!-- <ion-label>{{AdaptationDetail.value['Description']}}</ion-label> -->\\r\\n                        <ion-label>VALUE</ion-label>\\r\\n                    </ion-item>\\r\\n                </mat-panel-title>\\r\\n            </mat-expansion-panel-header>\\r\\n            <ion-item-sliding>\\r\\n                <ion-item-options side=\\\"start\\\">\\r\\n                    <ion-item-option color=\\\"danger\\\" (click)=\\\"null\\\" expandable>\\r\\n                        <ion-icon slot=\\\"icon-only\\\" name=\\\"trash-outline\\\"></ion-icon>\\r\\n                    </ion-item-option>\\r\\n                </ion-item-options>\\r\\n            </ion-item-sliding>\\r\\n            <ion-card>\\r\\n                <ion-item>\\r\\n                    <ion-label>Adaptation Request</ion-label>\\r\\n                    <ion-badge> Enhanced</ion-badge>\\r\\n                    <!--  <ion-badge *ngIf=\\\"$any(AdaptationDetail).value.AdaptationRequest === 1\\\"> Enhanced</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationDetail).value.AdaptationRequest === 2\\\"> RealTime</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationDetail).value.AdaptationRequest === 3\\\"> Record</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationDetail).value.AdaptationRequest === 4\\\"> Symbolic</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationDetail).value.AdaptationRequest === 5\\\"> Synthesized</ion-badge>\\r\\n                  <ion-badge *ngIf=\\\"$any(AdaptationDetail).value.AdaptationRequest === 6\\\"> Verbatim</ion-badge> -->\\r\\n\\r\\n                </ion-item>\\r\\n            </ion-card>\\r\\n        </mat-expansion-panel>\\r\\n    </div>\\r\\n</div>\\r\\n\";","export default \"<ion-header>\\r\\n\\r\\n    <ion-toolbar>\\r\\n\\r\\n        <ion-buttons slot=\\\"start\\\">\\r\\n            <ion-back-button text=\\\"Patient Access\\\" defaultHref=\\\"/tabs/tab1/patientAccess\\\" icon=\\\"chevron-back-outline\\\"></ion-back-button>\\r\\n        </ion-buttons>\\r\\n        <ion-buttons slot=\\\"end\\\">\\r\\n            <ion-button>\\r\\n            </ion-button>\\r\\n        </ion-buttons>\\r\\n\\r\\n    </ion-toolbar>\\r\\n    <ion-row>\\r\\n        <ion-col size=\\\"4\\\" class=\\\"ion-align-self-start\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\r\\n            <ion-card color=\\\"transparent\\\" class=\\\"deviceTemplate-card\\\">\\r\\n                <ion-img src='assets/icon/accessW.png'></ion-img>\\r\\n\\r\\n            </ion-card>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"4\\\" class=\\\"ion-align-self-end\\\">\\r\\n        </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-start\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\r\\n\\r\\n            <ion-list-header>\\r\\n                <ion-label class=\\\"text-top\\\">{{ patientAccessName}}</ion-label>\\r\\n\\r\\n            </ion-list-header>\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-end\\\">\\r\\n\\r\\n        </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-row>\\r\\n        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-start\\\">\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center\\\">\\r\\n\\r\\n            <ion-list-header>\\r\\n\\r\\n                <ion-label class=\\\"text-top\\\">\\r\\n                    <h4>{{ patientAccessDescrip}}</h4>\\r\\n                </ion-label>\\r\\n            </ion-list-header>\\r\\n\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1\\\" class=\\\"ion-align-self-end\\\">\\r\\n\\r\\n        </ion-col>\\r\\n\\r\\n    </ion-row>\\r\\n    <ion-segment [hidden]=\\\"patientAccessDetailNull\\\" value=\\\"all\\\" color=\\\"tertiary\\\" class=\\\"animate__animated animate__slideInUp animate__fast\\\" scrollable=\\\"true\\\" mode=\\\"md\\\" [(ngModel)]=\\\"segmentModel\\\" lines=\\\"none\\\">\\r\\n        <ion-segment-button value=\\\"details\\\">\\r\\n            <ion-icon name=\\\"analytics\\\"></ion-icon>\\r\\n            <ion-label>Access Mode</ion-label>\\r\\n        </ion-segment-button>\\r\\n        <ion-segment-button value=\\\"accessModeDetail\\\">\\r\\n            <ion-icon name=\\\"accessibility-outline\\\"></ion-icon>\\r\\n            <ion-label>Detail Access Mode</ion-label>\\r\\n        </ion-segment-button>\\r\\n    </ion-segment>\\r\\n</ion-header>\\r\\n<ion-content>\\r\\n    <ion-card-header [hidden]=\\\"!patientAccessDetailNull\\\" color=\\\"warning\\\" class=\\\"animate__animated animate__fadeInLeft animate__slow\\\">\\r\\n        <ion-icon size=\\\"large\\\" name=\\\"warning-outline\\\"></ion-icon>No Profile Access has been added to this Access mode. To add Patient Access, select one.\\r\\n    </ion-card-header>\\r\\n    <div class=\\\"segment\\\" *ngIf=\\\"segmentModel === 'details'\\\" [hidden]=\\\"patientAccessDetailNull\\\">\\r\\n        <ion-list>\\r\\n            <ion-list-header>\\r\\n                <ion-icon class=\\\"segmentIcon\\\" name=\\\"accessibility-outline\\\"></ion-icon>Access Mode Name</ion-list-header>\\r\\n            <ion-item>\\r\\n\\r\\n                <ion-label text-wrap> {{$any(accessMode)?.Name}}</ion-label>\\r\\n            </ion-item>\\r\\n            <ion-list-header>\\r\\n                <ion-icon class=\\\"segmentIcon\\\" name=\\\"clipboard-outline\\\"></ion-icon>Description</ion-list-header>\\r\\n            <ion-item>\\r\\n\\r\\n                <ion-label text-wrap> {{$any(accessMode)?.Description}}</ion-label>\\r\\n\\r\\n            </ion-item>\\r\\n            <ion-list-header>\\r\\n\\r\\n                <ion-icon class=\\\"segmentIcon\\\" name=\\\"qr-code-outline\\\"></ion-icon>Access Mode Type</ion-list-header>\\r\\n            <ion-item>\\r\\n\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 1\\\"> Auditory</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 2\\\"> Colour</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 3\\\"> ItemSize</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 4\\\"> Olfactory</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 5\\\"> Orientation</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 6\\\"> Position</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 7\\\"> Tactile</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 8\\\"> Text on image</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 9\\\"> Textual</ion-label>\\r\\n                <ion-label *ngIf=\\\"$any(accessMode)?.TypeAccessMode === 10\\\"> Visual</ion-label>\\r\\n\\r\\n\\r\\n\\r\\n                <!-- <ion-label> {{$any(patientData)?.IsActive}}</ion-label> -->\\r\\n\\r\\n            </ion-item>\\r\\n\\r\\n\\r\\n        </ion-list>\\r\\n    </div>\\r\\n    <div class=\\\"segment\\\" *ngIf=\\\"segmentModel === 'accessModeDetail'\\\">\\r\\n        <app-detail-access-mode></app-detail-access-mode>\\r\\n    </div>\\r\\n    <form [formGroup]=\\\"patientAccessForm\\\" (ngSubmit)=\\\"onSubmit()\\\" [hidden]=\\\"!patientAccessDetailNull\\\">\\r\\n\\r\\n        <ion-item lines=\\\"full\\\">\\r\\n            <ion-label position=\\\"stacked\\\">Profile Access</ion-label>\\r\\n\\r\\n            <ion-select multiple=\\\"false\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" formControlName=\\\"idPatientProfile\\\">\\r\\n\\r\\n                <div class=\\\"error\\\" *ngIf=\\\"patientAccessForm.controls.idPatientProfile.errors && patientAccessForm.controls.idPatientProfile.touched\\\">\\r\\n                    Please fill out this field\\r\\n                </div>\\r\\n\\r\\n                <div>\\r\\n                    <ion-select-option *ngFor=\\\"let accessMode of allAccessMode\\\" [value]=\\\"accessMode['Id']\\\">{{accessMode['Name']}}</ion-select-option>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </ion-select>\\r\\n\\r\\n        </ion-item>\\r\\n        <br>\\r\\n        <br>\\r\\n\\r\\n        <ion-button expand=\\\"block \\\" class=\\\"save\\\" size=\\\"small\\\" fill=\\\"solid\\\" type=\\\"submit\\\" color=\\\"light\\\" [disabled]=\\\"!patientAccessForm.valid\\\">Done</ion-button>\\r\\n    </form>\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}